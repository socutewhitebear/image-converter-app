name: Build and Release Electron App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Dependencies
        run: |
          npm ci

      - name: Build Electron App
        run: |
          npm run build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: electron-build-artifacts-${{ matrix.os }}-${{ github.run_id }}
          path: dist/*

  create_release:
    runs-on: ubuntu-latest  # The release will be created from Ubuntu
    needs: build  # Ensure this job runs after the 'build' job
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up GitHub Token
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Create GitHub Release and Upload Artifacts
        uses: softprops/action-gh-release@v2
        with:
          files: |
            build-artifacts-macos-latest-${{ github.run_id }}.tar.gz
            build-artifacts-ubuntu-latest-${{ github.run_id }}.tar.gz
            build-artifacts-windows-latest-${{ github.run_id }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Release Notes
        run: |
          echo "## Release Notes" > release_notes.md
          echo "" >> release_notes.md
          echo "This release includes builds for macOS, Ubuntu, and Windows." >> release_notes.md
          echo "" >> release_notes.md
          echo "### Files" >> release_notes.md
          echo "- build-artifacts-macos-latest-${{ github.run_id }}.tar.gz" >> release_notes.md
          echo "- build-artifacts-ubuntu-latest-${{ github.run_id }}.tar.gz" >> release_notes.md
          echo "- build-artifacts-windows-latest-${{ github.run_id }}.tar.gz" >> release_notes.md
          cat release_notes.md
          
      - name: Upload Release Notes
        uses: softprops/action-gh-release@v2
        with:
          files: release_notes.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

